// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  codigo          Int @id @default(autoincrement())
  nome            String @db.VarChar(100)
  login           String @db.VarChar(100)
  email           String @db.VarChar(255)
  senha           String @db.VarChar(255)
  confirmasenha   Boolean 
  confirmaemail   Boolean @default(false)
  alterarsenha    Boolean @default(false)
  usuarioPermissao  UsuarioPermissao[]
  usuarioGrupo UsuarioGrupo[]

  @@map("tbusuario")
}

model Grupo {
  codigo      Int @id @default(autoincrement())
  descricao   String @db.VarChar(100)
  created_at  DateTime @default(now())
  usuarioGrupo UsuarioGrupo[]
  grupoPermissao GrupoPermissao[]

  @@map("tbgrupo")
}

model Permissao {
  codigo      Int @id @default(autoincrement())
  nome        String @db.VarChar(50)
  descricao   String @db.VarChar(255)
  usuarioPermissao  UsuarioPermissao[]
  grupoPermissao GrupoPermissao[]

  @@map("tbpermissao")
}

model UsuarioPermissao {
  usuario Int
  usuarioCod Usuario @relation(fields: [usuario], references: [codigo])
  permissao Int
  permissaoCod Permissao @relation(fields: [permissao], references: [codigo])

  @@id([usuario, permissao])
  @@map("tbusuariopermissao")
}

model UsuarioGrupo {
  grupo  Int
  grupoCod Grupo @relation(fields: [grupo], references: [codigo])
  usuario Int
  usuarioCod Usuario @relation(fields: [usuario], references: [codigo])

  @@id([grupo, usuario])
  @@map("tbusuariogrupo")
}

model GrupoPermissao {
  grupo  Int
  grupoCod  Grupo @relation(fields: [grupo], references: [codigo])
  permissao Int
  permissaoCod Permissao @relation(fields: [permissao], references: [codigo])

  @@id([grupo, permissao])
  @@map("tbgrupopermissao")
}

// Migrations de Endere√ßos

model Pais {
  codigo  Int @id @default(autoincrement())
  nome    String @db.VarChar(100)
  sigla   String @db.VarChar(3)
  ddi     String @db.VarChar(3)
  estado  Estado[]
  cidade  Cidade[]
  cep     Cep[]

  @@map("tbpais")
}

model Estado {
  codigo  Int @id @default(autoincrement())
  nome    String @db.VarChar(100)
  pais    Int
  sigla   String @db.VarChar(3)
  ibge    String @db.VarChar(5)
  paisCod Pais @relation(fields: [pais], references: [codigo])
  cidades Cidade[]

  @@map("tbestado")
}

model Cidade {
  codigo    Int @id @default(autoincrement())
  nome      String @db.VarChar(100)
  pais      Int
  estado    Int
  ibge      String @db.VarChar(10)
  paisCod   Pais @relation(fields: [pais], references: [codigo])
  estadoCod Estado @relation(fields: [estado], references: [codigo])
  bairro    Bairro[]
  cep       Cep[]

  @@map("tbcidade")
}

model Bairro {
  codigo      Int @id @default(autoincrement())
  nome        String @db.VarChar(150)
  cidade      Int
  cidadeCod   Cidade @relation(fields: [cidade], references: [codigo])
  cep         Cep[]

  @@map("tbbairro")
}

model TipoLogradouro {
  codigo  Int @id @default(autoincrement())
  sigla   String @db.VarChar(10)
  nome    String @db.VarChar(50)
  cep     Cep[]

  @@map("tbtipologradouro")
}

model Cep {
  codigo          Int @id @default(autoincrement())
  nome            String @db.VarChar(255)
  tipologradouro  Int
  tipologradouroCod  TipoLogradouro @relation(fields: [tipologradouro], references: [codigo])
  pais            Int
  paisCod         Pais @relation(fields: [pais], references: [codigo])
  estado          Int
  estadoCod       Endereco @relation(fields: [estado], references: [codigo])
  cidade          Int
  cidadeCod       Cidade @relation(fields: [cidade], references: [codigo])
  bairro          Int
  bairroCod       Bairro @relation(fields: [bairro], references: [codigo])
  cep             String @db.VarChar(9)

  @@map("tbcep")
}

model Endereco {
  codigo        Int @id @default(autoincrement())
  numero        Int
  descricao     String @db.VarChar(255)
  complemento   String @db.VarChar(255)
  residencial   Boolean @default(false)
  comercial     Boolean @default(false)
  fiscal        Boolean @default(false)
  cep           Cep[]

  @@map("tbendereco")
}